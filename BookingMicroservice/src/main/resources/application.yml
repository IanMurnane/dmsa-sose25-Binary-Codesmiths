spring:
  application:
    name: booking-service
  config:
    import: optional:configserver:http://localhost:8888

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true

resilience4j:
  circuitbreaker:
    instances:
      vehicleService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
        permittedNumberOfCallsInHalfOpenState: 3
        minimumNumberOfCalls: 5
        waitDurationInOpenState: 60s
        failureRateThreshold: 50
        automaticTransitionFromOpenToHalfOpenEnabled: true
      paymentService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
        permittedNumberOfCallsInHalfOpenState: 3
        minimumNumberOfCalls: 5
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        automaticTransitionFromOpenToHalfOpenEnabled: true
  retry:
    instances:
      vehicleService:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
      paymentService:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
  timelimiter:
    instances:
      vehicleService:
        timeoutDuration: 3s
      paymentService:
        timeoutDuration: 3s

logging:
  level:
    io.github.resilience4j.circuitbreaker: DEBUG
    org.springframework.cloud.circuitbreaker: DEBUG
